@model Team
@{
    var projects = Model.DepartmentModels.SelectMany(dm => dm.ProjectModel).GroupBy(p => p.Id).Select(g => g.First());
}
<div class="container-team">
    <div class="cd" >
        <h5>Отделы</h5>
        <div class="container-departments">
            @foreach (var item in Model.DepartmentModels)
            {
                <input type="button" id="@item.Id" class="departments" value="Отдел: @item.Name" />
            }
            @if (Model.TeamMember != null && Model.TeamMember.Any(tm => tm.RoleID == 1 && tm.UserContextID == ViewBag.Id || tm.RoleID == 3 && tm.UserContextID == ViewBag.Id))
            {
                <input type="button" class="add-departments" id="modal-trigger-departments" data-team="@Model.Id" data-controller="Team" data-action="ModalWindowDepartment" value="+ Новый отдел" />
            }
        </div>
    </div>
    <div class="container-team-PS">
        <div class="container-team-ptoject">
            <h5>Проекты</h5>
            <div class="container-team-ptoject-style">
                @if(Model.DepartmentModels.Where(x=>x.ProjectModel.Any()).Any())
                {
                     
                    @foreach (var project in projects)
                    {
                        <a href="#" data-team="@project.Id" data-controller="Team" data-action="ModalWindowTeamGetProject">
                            <div class="team-project">
                                <h4>Название: @project.Name</h4>
                                <h4>Кол-во задач: @project.TaskModel.Count</h4>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <a href="#">
                        <div class="team-project">
                            <h4>Проектов нет</h4>
                        </div>
                    </a>
                }
            </div>
        </div>
        <div class="container-team-staff">
            <h5>Сотрудники</h5>
            <div class="container-team-staff-search">
                <input type="search" class="text" id="search-team-staff" data-staff="@Model.Id" placeholder="Поиск по имени или роли" />
                @if (Model.TeamMember != null && Model.TeamMember.Any(tm => tm.RoleID == 1 && tm.UserContextID == ViewBag.Id || tm.RoleID == 3 && tm.UserContextID == ViewBag.Id))
                {
                    <img class="icon-menu" src="~/Img/icon-add.png" style="margin-left:5px;" />
                }
            </div>
            <ul id="team-member-list">
                @if (Model.TeamMember != null && Model.TeamMember.Any())
                {
                    @foreach (var user in Model.TeamMember)
                    {
                        <li id="@user.Id">
                            <span class="name">@user.UserContext.UserName</span>
                            @if (Model.TeamMember != null && Model.TeamMember.Any(tm => tm.RoleID == 1 && tm.UserContextID == ViewBag.Id || tm.RoleID == 3 && tm.UserContextID == ViewBag.Id))
                            {
                                <select id="update-role-team" data-type="team">
                                    <option id="1" @(user.Role.Id == 1 ? "selected" : "")>Руководитель</option>
                                    <option id="3" @(user.Role.Id == 3 ? "selected" : "")>Администратор</option>
                                    <option id="5" @(user.Role.Id == 5 ? "selected" : "")>Менеджер</option>
                                    <option id="7" @(user.Role.Id == 7 ? "selected" : "")>Сотрудник</option>
                                </select>
                                <button class="clear-user" id="clear-team-staff">X</button>
                            }
                            else
                            {
                                <span class="role">@user.Role.NameRole</span>
                            }
                        </li>
                    }
                }
                else
                {
                    <p>Коллекция TeamMember пуста или не существует.</p>
                }
            </ul>
        </div>
    </div>
    <div class="container-team-statistic">
        <h5>Статистика</h5>
        <div>
            <div class="box">
                @* var projects = Model.DepartmentModels.SelectMany(dm => dm.ProjectModel).GroupBy(p => p.Id).Select(g => g.First()); *@
                <div class="percent" style="--i: @(projects.Count(x => x.Status == 1) > 0 ? Math.Round((double)projects.Count(x => x.Status == 2)/projects.Count(x => x.Status == 1) * 100.0, MidpointRounding.AwayFromZero) : 0)">
                    <svg>
                        <circle cx="70" cy="70" r="70"></circle>
                        <circle cx="70" cy="70" r="70"></circle>
                    </svg>
                    <div class="num">
                        <h2>@projects.Count(x => x.Status == 2) из @projects.Count(x => x.Status == 1)</h2>
                    </div>
                </div>
                <h2 class="text">Выполнено</h2>
            </div>
            <div class="box">
                <div class="percent" style="--i: @(projects.Count(x => x.Status == 1) > 0 ?Math.Round((double)projects.Count(x => x.Status == 3)/projects.Count(x => x.Status == 1) * 100.0, MidpointRounding.AwayFromZero): 0)">
                    <svg>
                        <circle cx="70" cy="70" r="70"></circle>
                        <circle cx="70" cy="70" r="70"></circle>
                    </svg>
                    <div class="num">
                        <h2><h2>@projects.Count(x => x.Status == 3) из @projects.Count(x => x.Status == 1)</h2>
                    </div>
                </div>
                <h2 class="text">Просрочено</h2>
            </div>
             
        </div>
    </div>
    @if (Model.TeamMember != null && Model.TeamMember.Any(tm => tm.RoleID == 1 && tm.UserContextID == ViewBag.Id || tm.RoleID == 3 && tm.UserContextID == ViewBag.Id))
    {
        <div class="container-team-setting">
            <h5>Настройки</h5>
            <div class="content-team-setting">
                <input type="text" class="text" placeholder="Название" />
                <input type="submit" value="Изменить" class="btn-button" />
                <input type="submit" value="Удалить" class="btn-button" id="delete-team" data-delete="@Model.Id" />
            </div>
        </div>
    }
</div>
 
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $('.icon-menu').on('click', function () {
        var searchInputuser = $('#search-team-staff');
        var searchInput = $('#search-team-staff-user');
        if (searchInputuser.attr('id') === 'search-team-staff') {
            searchInputuser.attr('id', 'search-team-staff-user');
            searchInputuser.attr('placeholder', 'Поиск новых пользователей');
            $('#team-member-list').empty();
        } 
        else if (searchInput.attr('id') === 'search-team-staff-user') {
            searchInput.attr('id', 'search-team-staff');
            searchInput.attr('placeholder', 'Поиск по имени или роли');
            $('#team-member-list').empty();
            updateTeamMemberList();
        }
    });

    $(document).ready(function() {
        $('#search-team-staff').on('input', function() {
            var searchTerm = $(this).val().toLowerCase();

            $('#team-member-list li').each(function() {
                var name = $(this).find('.name').text().toLowerCase();
                var role = $(this).find('.role').text().toLowerCase();

                // Проверяем, содержит ли имя или роль введенный текст
                if (name.indexOf(searchTerm) > -1 || role.indexOf(searchTerm) > -1) {
                    $(this).show(); // Показываем элемент, если текст найден в имени или роли
                } else {
                    $(this).hide(); // Скрываем элемент, если текст не найден
                }
            });
        });
    });
</script>